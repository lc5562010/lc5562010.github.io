{"version":3,"sources":["api/index.js","App.js","serviceWorker.js","index.js"],"names":["fetch","axios","create","timeout","interceptors","request","use","config","method","data","headers","qs","stringify","error","Promise","reject","response","a","status","console","log","doamin","SubMenu","Content","Sider","MyTree","props","fetchTree","http","url","then","res","setState","treeData","catch","err","handleClick","item","key","keyPath","domEvent","__linkChange","document","title","children","dataToCommponent","name","path","isFilder","entries","Object","type","map","v","filderName","filePath","Item","onClick","state","this","mode","style","height","borderRight","React","Component","App","link","loading","viewUrl","iframeLoad","e","lock","window","history","replaceState","replace","pushState","iframeH","target","clientHeight","onpopstate","event","location","JSON","className","width","theme","overflow","position","left","bind","marginLeft","background","margin","spinning","src","frameBorder","minHeight","onLoad","marginTop","placement","padding","span","href","rel","message","description","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3dc0c599.chunk.js","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\nlet fetch = axios.create({\n    timeout: 5000 // request timeout\n})\n\nfetch.interceptors.request.use(config => {\n    if (config.method === 'post' || config.method === 'put' || config.method === 'delete') {\n        if (typeof(config.data) !== 'string' && config.headers['Content-Type'] !== 'multipart/form-data') {\n            config.data = qs.stringify(config.data)\n        }\n    }\n    return config\n}, error => {\n    Promise.reject(error)\n})\n\nfetch.interceptors.response.use(async data => {\n    return data\n}, error => {\n    if (error.response) {\n        if (error.response.status === 500) {\n            console.log('服务器错误，请联系管理员处理')\n        }\n        return Promise.reject(error.response.data)\n    } else {\n        return Promise.reject(error)\n    }\n})\n\nexport default fetch","import React, { Component } from \"react\";\nimport { Layout, Menu, Icon, Spin, Alert, Tooltip, Row, Col } from \"antd\";\nimport http from \"./api\";\nimport \"./App.css\";\nconst doamin = \"https://lc5562010.github.io\"\n\nconst { SubMenu } = Menu;\nconst { Content, Sider } = Layout;\n\nclass MyTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTree();\n  }\n\n  fetchTree = () => {\n    http({\n      url: \"./entry.json\",\n      method: \"get\"\n    })\n      .then(res => {\n        this.setState({\n          treeData: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleClick = ({ item, key, keyPath, domEvent }) => {\n    // console.log( item, key, keyPath, domEvent);\n    this.props.__linkChange(key);\n    try {\n      document.title = item.props.children;\n    } catch (error) {}\n  };\n\n  dataToCommponent = (name, path, isFilder = false) => {\n    if (isFilder) {\n      const entries = Object.entries(path);\n      return (\n        <SubMenu\n          key={name}\n          title={\n            <span>\n              <Icon type=\"folder\" />\n              {name}\n            </span>\n          }\n        >\n          {entries.map(v => {\n            const filderName = v[0];\n            const filePath = v[1];\n            if (typeof filePath == \"object\") {\n              return this.dataToCommponent(filderName, filePath, true);\n            } else {\n              return (\n                <Menu.Item key={filePath} onClick={this.handleClick}>\n                  {filderName}\n                </Menu.Item>\n              );\n            }\n          })}\n        </SubMenu>\n      );\n    } else {\n      return (\n        <Menu.Item key={path} onClick={this.handleClick}>\n          {name}\n        </Menu.Item>\n      );\n    }\n  };\n\n  render() {\n    const entries = Object.entries(this.state.treeData);\n    return (\n      <Menu mode=\"inline\" style={{ height: \"100%\", borderRight: 0 }}>\n        {entries.map(v => {\n          const filderName = v[0];\n          const filePath = v[1];\n          if (typeof filePath == \"object\") {\n            return this.dataToCommponent(filderName, filePath, true);\n          } else {\n            return this.dataToCommponent(filderName, filePath);\n          }\n        })}\n      </Menu>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      // viewUrl: \"https://justwe7.github.io/弹性盒模型/align-self.html\",\n      iframeH: \"95vh\",\n      viewUrl: \"\",\n      lock: false\n    };\n    this.lock = false\n\n    window.onpopstate = function(event) {\n      console.log(event);\n      \n      console.log(\"location: \" + document.location + \", state: \" + JSON.stringify(event.state));\n      // window.history.replaceState({}, null, '/')\n    };\n  }\n\n  __linkChange = link => {\n    this.setState({\n      loading: true,\n      viewUrl: `${doamin}/${link}`\n    });\n  };\n\n  iframeLoad = (e, v, a) => {\n    if (this.lock) {\n      window.history.replaceState({}, null, this.state.viewUrl.replace(doamin, ''))\n    } else {\n      window.history.pushState({}, null, this.state.viewUrl.replace(doamin, ''))\n    }\n\n    this.setState({\n      loading: false,\n      iframeH: `${e.target.clientHeight}px`\n    });\n    this.lock = true\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Layout>\n            <Sider\n              width={220}\n              theme=\"dark\"\n              style={{\n                overflow: \"auto\",\n                height: \"100vh\",\n                position: \"fixed\",\n                left: 0\n              }}\n            >\n              <MyTree __linkChange={this.__linkChange.bind(this)} />\n            </Sider>\n            <Layout style={{ marginLeft: 220 }}>\n              <Content\n                style={{\n                  background: \"#fff\",\n                  margin: 0\n                }}\n              >\n                {this.state.viewUrl ? (\n                  <Spin spinning={this.state.loading}>\n                    <iframe\n                      title=\"This is a unique title\"\n                      src={this.state.viewUrl}\n                      frameBorder=\"0\"\n                      width=\"100%\"\n                      height=\"100%\"\n                      style={{ minHeight: \"100vh\", height: this.state.iframeH }}\n                      onLoad={this.iframeLoad}\n                    />\n                  </Spin>\n                ) : (\n                  <div style={{marginTop: '20px'}}>\n                    <Tooltip placement=\"topLeft\" title=\"页面打不开不是报错！！！\">\n                      <h2>justwe7のDEMO小仓库</h2>\n                    </Tooltip>\n                    <Row style={{padding: '10px 0 10px'}}>\n                      <Col span={3}><a href=\"https://github.com/justwe7/justwe7.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">github仓库</a></Col>\n                      <Col span={3}><a href=\"http://17qu.top\" target=\"_blank\" rel=\"noopener noreferrer\">blog地址</a></Col>\n                    </Row>\n                    <Alert\n                      message=\"点击左边导航查看demo，！！！空白的页面查看控制台有打印log\"\n                      description=\"展示都是iframe页面=>可以在新窗口打开调试\"\n                      type=\"success\"\n                    />\n                  </div>\n                )}\n              </Content>\n            </Layout>\n          </Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}